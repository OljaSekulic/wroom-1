version: "3"
services:

  eureka:
    build:
      context: ./eureka-service-registry
      dockerfile: Dockerfile
    image: xws:eureka
    container_name: eureka
    ports:
    - 8761:8761
    networks:
      - xws-network

  zuul:
    build:
      context: ./zuul-api-gateway
      dockerfile: Dockerfile
    image: xws:zuul
    container_name: zuul
    ports:
      - 8762:8762
    environment:
      REGISTRY_HOST: eureka
      KEYSTORE: /etc/certificates/zuul/zuul-server.p12
      KEYSTORE_PASSWORD: password
      KEYSTORE_ALIAS: 655575225830
      TRUSTSTORE: /etc/truststore.p12
      TRUSTSTORE_PASSWORD: password
    networks:
      - xws-network
    depends_on:
      - eureka
    links:
      - eureka
    volumes:
      - ./pki/tingle/certificates:/etc/certificates
      - ./pki/tingle/.truststore:/etc

  search-service:
    build:
      context: ./search-service
      dockerfile: Dockerfile
    image: xws:search-service
    container_name: search-service
    restart: on-failure
    networks:
      - xws-network
    environment:
      REGISTRY_HOST: eureka
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: wroom
      KEYSTORE: /etc/certificates/search-service/search-server.p12
      KEYSTORE_PASSWORD: password
      KEYSTORE_ALIAS: 348124495475
      TRUSTSTORE: /etc/truststore.p12
      TRUSTSTORE_PASSWORD: password
    ports:
      - 8091:8091
    depends_on:
      - eureka
      - mysql
    links:
      - eureka
    volumes:
    - ./pki/tingle/certificates:/etc/certificates
    - ./pki/tingle/.truststore:/etc

#  agent:
#    build:
#      context: ./ #here was wroom-agent context
#      dockerfile: Dockerfile
#
#    image: xws:agent
#    container_name: agent
#    restart: on-failure
#    networks:
#      - xws-network
#    ports:
#      - 8081:8081
#    environment:
#      DATABASE_USERNAME: root
#      DATABASE_PASSWORD: root
#      DATABASE_DOMAIN: mysql
#      DATABASE_SCHEMA: wroom
#      CLOUDAMQP_URL: ${CLOUDAMQP_URL}
#    depends_on:
#      - mysql

#  mail:
#    build:
#      context: ./amqp-mail-service
#      dockerfile: Dockerfile
#
#    image: mail:1.0.0
#    container_name: mail
#    restart: on-failure
##    networks:
##      - xws-network
##    ports:
##      - 8081:8080
#    environment:
##      RMQ_HOST: rabbitmq-broker
#      CLOUDAMQP_URL: ${CLOUDAMQP_URL}
##    depends_on:
##      - rabbitmq-broker



#  rabbitmq-broker:
#    image: rabbitmq:management-alpine
#    container_name: rabbitmq-broker
#    ports:
#      - 5672:5672
#      - 15672:15672
#    networks:
#      - xws-network


  mysql:
    image: mysql:8.0.19
    container_name: mysql
    restart: always
    networks:
      - xws-network
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: wroom
    volumes:
      - mysql-data:/var/lib/mysql

    ports:
        - "3306:3306"
        
# build ui seperately from agent
  agent-ui:
    build:
      context: ./agent-ui
      dockerfile: Dockerfile
    image: xws:agent-ui
    container_name: agent-ui
    ports:
      - 4200:80


volumes:
  mysql-data:

networks:
  xws-network:
    driver: bridge
