version: "3"
services:

  agent:
    build:
      context: ./ #here was wroom-agent context
      dockerfile: Dockerfile
      
    image: agent:1.0.0
    container_name: agent
    restart: on-failure
    networks:
      - demo
    ports:
      - 8080:8080
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: wroom
#      RMQ_HOST: rabbitmq-broker
      CLOUDAMQP_URL: ${CLOUDAMQP_URL}
    depends_on:
      - mysql
#      - rabbitmq-broker


#  mail:
#    build:
#      context: ./amqp-mail-service
#      dockerfile: Dockerfile
#
#    image: mail:1.0.0
#    container_name: mail
#    restart: on-failure
##    networks:
##      - demo
##    ports:
##      - 8081:8080
#    environment:
##      RMQ_HOST: rabbitmq-broker
#      CLOUDAMQP_URL: ${CLOUDAMQP_URL}
##    depends_on:
##      - rabbitmq-broker



#  rabbitmq-broker:
#    image: rabbitmq:management-alpine
#    container_name: rabbitmq-broker
#    ports:
#      - 5672:5672
#      - 15672:15672
#    networks:
#      - demo


  mysql:
    image: mysql:8.0.19
    container_name: mysql
    restart: always
    networks:
      - demo
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: wroom
    volumes:
      - mysql-data:/var/lib/mysql

    ports:
        - "3306:3306"
        
# build ui seperately from agent
#  agent-ui:
#    build:
#      context: ./agent-ui
#      dockerfile: Dockerfile
#    image: wroom/agent-ui:1.0.0
#    container_name: agent-ui
#    ports:
#      - 4200:80


volumes:
  mysql-data:

networks:
  demo:
    driver: bridge
