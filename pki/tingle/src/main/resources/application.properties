server.port = 8082

spring.datasource.driverClassName = org.postgresql.Driver

spring.datasource.initialization-mode = always
spring.datasource.platform = postgres

spring.datasource.url=jdbc:postgresql://localhost:5432/tingle
spring.datasource.username = postgres
spring.datasource.password = khaf1

#JPA-Hibernate
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true

#optimizacija za postgres upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

tingle.root.keystore.location = ./.keystores/root.p12
tingle.intermediate.keystore.location = ./.keystores/intermediate.p12
tingle.endentity.keystore.location = ./.keystores/end-entity.p12

tingle.root.keystore.password = password
tingle.intermediate.keystore.password = password
tingle.endentity.keystore.password = password
tingle.root.duration.years = 20
tingle.intermediate.duration.years = 10
tingle.endentity.duration.years = 1

tingle.truststore.password = password
tingle.truststore.location = ./.truststore/truststore.p12

# TLS
server.ssl.algorithm=${TLS_VERSION:TLSv1.3}
server.ssl.key-store-type=${KEYSTORE_TYPE:PKCS12}
server.ssl.key-store=${KEYSTORE:classpath:tingle-server.p12}
server.ssl.key-store-password=${KEYSTORE_PASSWORD:password}
server.ssl.key-alias=${KEYSTORE_ALIAS:239205525227}
server.ssl.trust-store-type=${TRUSTSTORE_TYPE:PKCS12}
server.ssl.trust-store=${TRUSTSTORE:classpath:truststore.p12}
server.ssl.trust-store-password=${TRUSTSTORE_PASSWORD:password}
server.ssl.enabled=true
server.ssl.client-auth=need
